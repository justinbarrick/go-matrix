// Code generated by go-swagger; DO NOT EDIT.

package room_directory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SetRoomAliasReader is a Reader for the SetRoomAlias structure.
type SetRoomAliasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetRoomAliasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSetRoomAliasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewSetRoomAliasConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetRoomAliasOK creates a SetRoomAliasOK with default headers values
func NewSetRoomAliasOK() *SetRoomAliasOK {
	return &SetRoomAliasOK{}
}

/*SetRoomAliasOK handles this case with default header values.

The mapping was created.
*/
type SetRoomAliasOK struct {
	Payload SetRoomAliasOKBody
}

func (o *SetRoomAliasOK) Error() string {
	return fmt.Sprintf("[PUT /_matrix/client/r0/directory/room/{roomAlias}][%d] setRoomAliasOK  %+v", 200, o.Payload)
}

func (o *SetRoomAliasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetRoomAliasConflict creates a SetRoomAliasConflict with default headers values
func NewSetRoomAliasConflict() *SetRoomAliasConflict {
	return &SetRoomAliasConflict{}
}

/*SetRoomAliasConflict handles this case with default header values.

A room alias with that name already exists.
*/
type SetRoomAliasConflict struct {
}

func (o *SetRoomAliasConflict) Error() string {
	return fmt.Sprintf("[PUT /_matrix/client/r0/directory/room/{roomAlias}][%d] setRoomAliasConflict ", 409)
}

func (o *SetRoomAliasConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*SetRoomAliasOKBody set room alias o k body
swagger:model SetRoomAliasOKBody
*/
type SetRoomAliasOKBody interface{}
