// Code generated by go-swagger; DO NOT EDIT.

package room_participation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/justinbarrick/go-matrix/models"
)

// InitialSyncReader is a Reader for the InitialSync structure.
type InitialSyncReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InitialSyncReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInitialSyncOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewInitialSyncNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInitialSyncOK creates a InitialSyncOK with default headers values
func NewInitialSyncOK() *InitialSyncOK {
	return &InitialSyncOK{}
}

/*InitialSyncOK handles this case with default header values.

The user's current state.
*/
type InitialSyncOK struct {
	Payload *models.InitialSyncOKBody
}

func (o *InitialSyncOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/r0/initialSync][%d] initialSyncOK  %+v", 200, o.Payload)
}

func (o *InitialSyncOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InitialSyncOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInitialSyncNotFound creates a InitialSyncNotFound with default headers values
func NewInitialSyncNotFound() *InitialSyncNotFound {
	return &InitialSyncNotFound{}
}

/*InitialSyncNotFound handles this case with default header values.

There is no avatar URL for this user or this user does not exist.
*/
type InitialSyncNotFound struct {
}

func (o *InitialSyncNotFound) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/r0/initialSync][%d] initialSyncNotFound ", 404)
}

func (o *InitialSyncNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
