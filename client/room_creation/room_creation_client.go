// Code generated by go-swagger; DO NOT EDIT.

package room_creation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new room creation API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for room creation API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CreateRoom creates a new room

Create a new room with various configuration options.

The server MUST apply the normal state resolution rules when creating
the new room, including checking power levels for each event. It MUST
apply the events implied by the request in the following order:

0. A default ``m.room.power_levels`` event, giving the room creator
   (and not other members) permission to send state events.

1. Events set by ``presets``.

2. Events listed in ``initial_state``, in the order that they are
   listed.

3. Events implied by ``name`` and ``topic``.

4. Invite events implied by ``invite`` and ``invite_3pid``.
*/
func (a *Client) CreateRoom(params *CreateRoomParams, authInfo runtime.ClientAuthInfoWriter) (*CreateRoomOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateRoomParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createRoom",
		Method:             "POST",
		PathPattern:        "/_matrix/client/r0/createRoom",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateRoomReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateRoomOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
