// Code generated by go-swagger; DO NOT EDIT.

package read_markers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new read markers API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for read markers API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
SetReadMarker sets the position of the read marker for a room

Sets the position of the read marker for a given room, and optionally
the read receipt's location.
*/
func (a *Client) SetReadMarker(params *SetReadMarkerParams, authInfo runtime.ClientAuthInfoWriter) (*SetReadMarkerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSetReadMarkerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "setReadMarker",
		Method:             "POST",
		PathPattern:        "/_matrix/client/unstable/rooms/{roomId}/read_markers",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SetReadMarkerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SetReadMarkerOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
