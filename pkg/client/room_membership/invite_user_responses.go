// Code generated by go-swagger; DO NOT EDIT.

package room_membership

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/justinbarrick/go-matrix/pkg/models"
)

// InviteUserReader is a Reader for the InviteUser structure.
type InviteUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInviteUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewInviteUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewInviteUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInviteUserOK creates a InviteUserOK with default headers values
func NewInviteUserOK() *InviteUserOK {
	return &InviteUserOK{}
}

/*InviteUserOK handles this case with default header values.

The user has been invited to join the room.
*/
type InviteUserOK struct {
	Payload InviteUserOKBody
}

func (o *InviteUserOK) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/rooms/{roomId}/invite ][%d] inviteUserOK  %+v", 200, o.Payload)
}

func (o *InviteUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUserForbidden creates a InviteUserForbidden with default headers values
func NewInviteUserForbidden() *InviteUserForbidden {
	return &InviteUserForbidden{}
}

/*InviteUserForbidden handles this case with default header values.

You do not have permission to invite the user to the room. A meaningful ``errcode`` and description error text will be returned. Example reasons for rejections are:

- The invitee has been banned from the room.
- The invitee is already a member of the room.
- The inviter is not currently in the room.
- The inviter's power level is insufficient to invite users to the room.
*/
type InviteUserForbidden struct {
	Payload *models.InviteUserForbiddenBody
}

func (o *InviteUserForbidden) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/rooms/{roomId}/invite ][%d] inviteUserForbidden  %+v", 403, o.Payload)
}

func (o *InviteUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InviteUserForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUserTooManyRequests creates a InviteUserTooManyRequests with default headers values
func NewInviteUserTooManyRequests() *InviteUserTooManyRequests {
	return &InviteUserTooManyRequests{}
}

/*InviteUserTooManyRequests handles this case with default header values.

This request was rate-limited.
*/
type InviteUserTooManyRequests struct {
	Payload *models.InviteUserTooManyRequestsBody
}

func (o *InviteUserTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/rooms/{roomId}/invite ][%d] inviteUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *InviteUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InviteUserTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*InviteUserOKBody invite user o k body
swagger:model InviteUserOKBody
*/
type InviteUserOKBody interface{}
