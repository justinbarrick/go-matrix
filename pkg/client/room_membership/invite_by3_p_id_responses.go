// Code generated by go-swagger; DO NOT EDIT.

package room_membership

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/justinbarrick/go-matrix/pkg/models"
)

// InviteBy3PIDReader is a Reader for the InviteBy3PID structure.
type InviteBy3PIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteBy3PIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInviteBy3PIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewInviteBy3PIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewInviteBy3PIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInviteBy3PIDOK creates a InviteBy3PIDOK with default headers values
func NewInviteBy3PIDOK() *InviteBy3PIDOK {
	return &InviteBy3PIDOK{}
}

/*InviteBy3PIDOK handles this case with default header values.

The user has been invited to join the room.
*/
type InviteBy3PIDOK struct {
	Payload InviteBy3PIDOKBody
}

func (o *InviteBy3PIDOK) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/rooms/{roomId}/invite][%d] inviteBy3PIdOK  %+v", 200, o.Payload)
}

func (o *InviteBy3PIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteBy3PIDForbidden creates a InviteBy3PIDForbidden with default headers values
func NewInviteBy3PIDForbidden() *InviteBy3PIDForbidden {
	return &InviteBy3PIDForbidden{}
}

/*InviteBy3PIDForbidden handles this case with default header values.

You do not have permission to invite the user to the room. A meaningful ``errcode`` and description error text will be returned. Example reasons for rejections are:

- The invitee has been banned from the room.
- The invitee is already a member of the room.
- The inviter is not currently in the room.
- The inviter's power level is insufficient to invite users to the room.
*/
type InviteBy3PIDForbidden struct {
	Payload *models.InviteBy3PIDForbiddenBody
}

func (o *InviteBy3PIDForbidden) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/rooms/{roomId}/invite][%d] inviteBy3PIdForbidden  %+v", 403, o.Payload)
}

func (o *InviteBy3PIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InviteBy3PIDForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteBy3PIDTooManyRequests creates a InviteBy3PIDTooManyRequests with default headers values
func NewInviteBy3PIDTooManyRequests() *InviteBy3PIDTooManyRequests {
	return &InviteBy3PIDTooManyRequests{}
}

/*InviteBy3PIDTooManyRequests handles this case with default header values.

This request was rate-limited.
*/
type InviteBy3PIDTooManyRequests struct {
	Payload *models.InviteBy3PIDTooManyRequestsBody
}

func (o *InviteBy3PIDTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/rooms/{roomId}/invite][%d] inviteBy3PIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *InviteBy3PIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InviteBy3PIDTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*InviteBy3PIDOKBody invite by3 p ID o k body
swagger:model InviteBy3PIDOKBody
*/
type InviteBy3PIDOKBody interface{}
