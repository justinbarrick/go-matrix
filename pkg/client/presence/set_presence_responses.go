// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/justinbarrick/go-matrix/pkg/models"
)

// SetPresenceReader is a Reader for the SetPresence structure.
type SetPresenceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetPresenceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSetPresenceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 429:
		result := NewSetPresenceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetPresenceOK creates a SetPresenceOK with default headers values
func NewSetPresenceOK() *SetPresenceOK {
	return &SetPresenceOK{}
}

/*SetPresenceOK handles this case with default header values.

The new presence state was set.
*/
type SetPresenceOK struct {
	Payload SetPresenceOKBody
}

func (o *SetPresenceOK) Error() string {
	return fmt.Sprintf("[PUT /_matrix/client/unstable/presence/{userId}/status][%d] setPresenceOK  %+v", 200, o.Payload)
}

func (o *SetPresenceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPresenceTooManyRequests creates a SetPresenceTooManyRequests with default headers values
func NewSetPresenceTooManyRequests() *SetPresenceTooManyRequests {
	return &SetPresenceTooManyRequests{}
}

/*SetPresenceTooManyRequests handles this case with default header values.

This request was rate-limited.
*/
type SetPresenceTooManyRequests struct {
	Payload *models.SetPresenceTooManyRequestsBody
}

func (o *SetPresenceTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /_matrix/client/unstable/presence/{userId}/status][%d] setPresenceTooManyRequests  %+v", 429, o.Payload)
}

func (o *SetPresenceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SetPresenceTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SetPresenceOKBody set presence o k body
swagger:model SetPresenceOKBody
*/
type SetPresenceOKBody interface{}
