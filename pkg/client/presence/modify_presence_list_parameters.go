// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/justinbarrick/go-matrix/pkg/models"
)

// NewModifyPresenceListParams creates a new ModifyPresenceListParams object
// with the default values initialized.
func NewModifyPresenceListParams() *ModifyPresenceListParams {
	var ()
	return &ModifyPresenceListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewModifyPresenceListParamsWithTimeout creates a new ModifyPresenceListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewModifyPresenceListParamsWithTimeout(timeout time.Duration) *ModifyPresenceListParams {
	var ()
	return &ModifyPresenceListParams{

		timeout: timeout,
	}
}

// NewModifyPresenceListParamsWithContext creates a new ModifyPresenceListParams object
// with the default values initialized, and the ability to set a context for a request
func NewModifyPresenceListParamsWithContext(ctx context.Context) *ModifyPresenceListParams {
	var ()
	return &ModifyPresenceListParams{

		Context: ctx,
	}
}

// NewModifyPresenceListParamsWithHTTPClient creates a new ModifyPresenceListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewModifyPresenceListParamsWithHTTPClient(client *http.Client) *ModifyPresenceListParams {
	var ()
	return &ModifyPresenceListParams{
		HTTPClient: client,
	}
}

/*ModifyPresenceListParams contains all the parameters to send to the API endpoint
for the modify presence list operation typically these are written to a http.Request
*/
type ModifyPresenceListParams struct {

	/*PresenceDiff
	  The modifications to make to this presence list.

	*/
	PresenceDiff *models.ModifyPresenceListParamsBody
	/*UserID
	  The user whose presence list is being modified.

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the modify presence list params
func (o *ModifyPresenceListParams) WithTimeout(timeout time.Duration) *ModifyPresenceListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the modify presence list params
func (o *ModifyPresenceListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the modify presence list params
func (o *ModifyPresenceListParams) WithContext(ctx context.Context) *ModifyPresenceListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the modify presence list params
func (o *ModifyPresenceListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the modify presence list params
func (o *ModifyPresenceListParams) WithHTTPClient(client *http.Client) *ModifyPresenceListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the modify presence list params
func (o *ModifyPresenceListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPresenceDiff adds the presenceDiff to the modify presence list params
func (o *ModifyPresenceListParams) WithPresenceDiff(presenceDiff *models.ModifyPresenceListParamsBody) *ModifyPresenceListParams {
	o.SetPresenceDiff(presenceDiff)
	return o
}

// SetPresenceDiff adds the presenceDiff to the modify presence list params
func (o *ModifyPresenceListParams) SetPresenceDiff(presenceDiff *models.ModifyPresenceListParamsBody) {
	o.PresenceDiff = presenceDiff
}

// WithUserID adds the userID to the modify presence list params
func (o *ModifyPresenceListParams) WithUserID(userID string) *ModifyPresenceListParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the modify presence list params
func (o *ModifyPresenceListParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *ModifyPresenceListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PresenceDiff != nil {
		if err := r.SetBodyParam(o.PresenceDiff); err != nil {
			return err
		}
	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
