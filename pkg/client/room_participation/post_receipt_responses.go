// Code generated by go-swagger; DO NOT EDIT.

package room_participation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/justinbarrick/go-matrix/pkg/models"
)

// PostReceiptReader is a Reader for the PostReceipt structure.
type PostReceiptReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostReceiptReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostReceiptOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 429:
		result := NewPostReceiptTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostReceiptOK creates a PostReceiptOK with default headers values
func NewPostReceiptOK() *PostReceiptOK {
	return &PostReceiptOK{}
}

/*PostReceiptOK handles this case with default header values.

The receipt was sent.
*/
type PostReceiptOK struct {
	Payload PostReceiptOKBody
}

func (o *PostReceiptOK) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/rooms/{roomId}/receipt/{receiptType}/{eventId}][%d] postReceiptOK  %+v", 200, o.Payload)
}

func (o *PostReceiptOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReceiptTooManyRequests creates a PostReceiptTooManyRequests with default headers values
func NewPostReceiptTooManyRequests() *PostReceiptTooManyRequests {
	return &PostReceiptTooManyRequests{}
}

/*PostReceiptTooManyRequests handles this case with default header values.

This request was rate-limited.
*/
type PostReceiptTooManyRequests struct {
	Payload *models.PostReceiptTooManyRequestsBody
}

func (o *PostReceiptTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/rooms/{roomId}/receipt/{receiptType}/{eventId}][%d] postReceiptTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostReceiptTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostReceiptTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostReceiptOKBody post receipt o k body
swagger:model PostReceiptOKBody
*/
type PostReceiptOKBody interface{}
