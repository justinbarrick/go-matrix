// Code generated by go-swagger; DO NOT EDIT.

package room_participation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/justinbarrick/go-matrix/pkg/models"
)

// GetOneRoomEventReader is a Reader for the GetOneRoomEvent structure.
type GetOneRoomEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOneRoomEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOneRoomEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetOneRoomEventNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOneRoomEventOK creates a GetOneRoomEventOK with default headers values
func NewGetOneRoomEventOK() *GetOneRoomEventOK {
	return &GetOneRoomEventOK{}
}

/*GetOneRoomEventOK handles this case with default header values.

The full event.
*/
type GetOneRoomEventOK struct {
	Payload *models.GetOneRoomEventOKBody
}

func (o *GetOneRoomEventOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/rooms/{roomId}/event/{eventId}][%d] getOneRoomEventOK  %+v", 200, o.Payload)
}

func (o *GetOneRoomEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetOneRoomEventOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOneRoomEventNotFound creates a GetOneRoomEventNotFound with default headers values
func NewGetOneRoomEventNotFound() *GetOneRoomEventNotFound {
	return &GetOneRoomEventNotFound{}
}

/*GetOneRoomEventNotFound handles this case with default header values.

The event was not found or you do not have permission to read this event.
*/
type GetOneRoomEventNotFound struct {
}

func (o *GetOneRoomEventNotFound) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/rooms/{roomId}/event/{eventId}][%d] getOneRoomEventNotFound ", 404)
}

func (o *GetOneRoomEventNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
