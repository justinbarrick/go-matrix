// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0 PushCondition
// swagger:model getPushRuleOKBodyAllOf0ConditionsItemsAllOf0
type GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0 struct {

	// Required for ``room_member_count`` conditions. A decimal integer
	// optionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches
	// rooms where the member count is strictly less than the given number and
	// so forth. If no prefix is present, this parameter defaults to ==.
	Is string `json:"is,omitempty"`

	// Required for ``event_match`` conditions. The dot-separated field of the
	// event to match.
	Key string `json:"key,omitempty"`

	// kind
	// Required: true
	// Enum: [event_match contains_display_name room_member_count]
	Kind *string `json:"kind"`

	// Required for ``event_match`` conditions. The glob-style pattern to
	// match against. Patterns with no special glob characters should be
	// treated as having asterisks prepended and appended when testing the
	// condition.
	Pattern string `json:"pattern,omitempty"`
}

// Validate validates this get push rule o k body all of0 conditions items all of0
func (m *GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKind(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getPushRuleOKBodyAllOf0ConditionsItemsAllOf0TypeKindPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["event_match","contains_display_name","room_member_count"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getPushRuleOKBodyAllOf0ConditionsItemsAllOf0TypeKindPropEnum = append(getPushRuleOKBodyAllOf0ConditionsItemsAllOf0TypeKindPropEnum, v)
	}
}

const (

	// GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0KindEventMatch captures enum value "event_match"
	GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0KindEventMatch string = "event_match"

	// GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0KindContainsDisplayName captures enum value "contains_display_name"
	GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0KindContainsDisplayName string = "contains_display_name"

	// GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0KindRoomMemberCount captures enum value "room_member_count"
	GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0KindRoomMemberCount string = "room_member_count"
)

// prop value enum
func (m *GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0) validateKindEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getPushRuleOKBodyAllOf0ConditionsItemsAllOf0TypeKindPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0) validateKind(formats strfmt.Registry) error {

	if err := validate.Required("kind", "body", m.Kind); err != nil {
		return err
	}

	// value enum
	if err := m.validateKindEnum("kind", "body", *m.Kind); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0) UnmarshalBinary(b []byte) error {
	var res GetPushRuleOKBodyAllOf0ConditionsItemsAllOf0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
