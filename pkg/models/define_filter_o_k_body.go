// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DefineFilterOKBody define filter o k body
// swagger:model defineFilterOKBody
type DefineFilterOKBody struct {

	// The ID of the filter that was created. Cannot start
	// with a ``{`` as this character is used to determine
	// if the filter provided is inline JSON or a previously
	// declared filter by homeservers on some APIs.
	// Required: true
	FilterID *string `json:"filter_id"`
}

// Validate validates this define filter o k body
func (m *DefineFilterOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFilterID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DefineFilterOKBody) validateFilterID(formats strfmt.Registry) error {

	if err := validate.Required("filter_id", "body", m.FilterID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DefineFilterOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DefineFilterOKBody) UnmarshalBinary(b []byte) error {
	var res DefineFilterOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
