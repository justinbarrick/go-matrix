// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems Group
//
// Configuration for group.
// swagger:model searchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems
type SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems struct {

	// Group Key
	//
	// Key that defines the group.
	// Enum: [room_id sender]
	Key string `json:"key,omitempty"`
}

// Validate validates this search params body search categories room events groupings group by items
func (m *SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var searchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItemsTypeKeyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["room_id","sender"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		searchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItemsTypeKeyPropEnum = append(searchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItemsTypeKeyPropEnum, v)
	}
}

const (

	// SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItemsKeyRoomID captures enum value "room_id"
	SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItemsKeyRoomID string = "room_id"

	// SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItemsKeySender captures enum value "sender"
	SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItemsKeySender string = "sender"
)

// prop value enum
func (m *SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems) validateKeyEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, searchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItemsTypeKeyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems) validateKey(formats strfmt.Registry) error {

	if swag.IsZero(m.Key) { // not required
		return nil
	}

	// value enum
	if err := m.validateKeyEnum("key", "body", m.Key); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems) UnmarshalBinary(b []byte) error {
	var res SearchParamsBodySearchCategoriesRoomEventsGroupingsGroupByItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
