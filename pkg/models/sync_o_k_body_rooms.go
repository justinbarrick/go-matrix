// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SyncOKBodyRooms Rooms
//
// Updates to rooms.
// swagger:model syncOKBodyRooms
type SyncOKBodyRooms struct {

	// invite
	Invite SyncOKBodyRoomsInvite `json:"invite,omitempty"`

	// join
	Join SyncOKBodyRoomsJoin `json:"join,omitempty"`

	// leave
	Leave SyncOKBodyRoomsLeave `json:"leave,omitempty"`
}

// Validate validates this sync o k body rooms
func (m *SyncOKBodyRooms) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInvite(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJoin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLeave(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SyncOKBodyRooms) validateInvite(formats strfmt.Registry) error {

	if swag.IsZero(m.Invite) { // not required
		return nil
	}

	if err := m.Invite.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("invite")
		}
		return err
	}

	return nil
}

func (m *SyncOKBodyRooms) validateJoin(formats strfmt.Registry) error {

	if swag.IsZero(m.Join) { // not required
		return nil
	}

	if err := m.Join.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("join")
		}
		return err
	}

	return nil
}

func (m *SyncOKBodyRooms) validateLeave(formats strfmt.Registry) error {

	if swag.IsZero(m.Leave) { // not required
		return nil
	}

	if err := m.Leave.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("leave")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SyncOKBodyRooms) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncOKBodyRooms) UnmarshalBinary(b []byte) error {
	var res SyncOKBodyRooms
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
