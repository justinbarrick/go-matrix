// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// QueryPublicRoomsParamsBody query public rooms params body
// swagger:model queryPublicRoomsParamsBody
type QueryPublicRoomsParamsBody struct {

	// filter
	Filter *QueryPublicRoomsParamsBodyFilter `json:"filter,omitempty"`

	// Whether or not to include all known networks/protocols from
	// application services on the homeserver. Defaults to false.
	IncludeAllNetworks bool `json:"include_all_networks,omitempty"`

	// Limit the number of results returned.
	Limit int64 `json:"limit,omitempty"`

	// A pagination token from a previous request, allowing clients
	// to get the next (or previous) batch of rooms.  The direction
	// of pagination is specified solely by which token is supplied,
	// rather than via an explicit flag.
	Since string `json:"since,omitempty"`

	// The specific third party network/protocol to request from the
	// homeserver. Can only be used if ``include_all_networks`` is false.
	ThirdPartyInstanceID string `json:"third_party_instance_id,omitempty"`
}

// Validate validates this query public rooms params body
func (m *QueryPublicRoomsParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFilter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QueryPublicRoomsParamsBody) validateFilter(formats strfmt.Registry) error {

	if swag.IsZero(m.Filter) { // not required
		return nil
	}

	if m.Filter != nil {
		if err := m.Filter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("filter")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *QueryPublicRoomsParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QueryPublicRoomsParamsBody) UnmarshalBinary(b []byte) error {
	var res QueryPublicRoomsParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
