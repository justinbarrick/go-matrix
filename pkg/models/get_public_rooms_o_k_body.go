// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetPublicRoomsOKBody A list of the rooms on the server.
// swagger:model getPublicRoomsOKBody
type GetPublicRoomsOKBody struct {

	// PublicRoomsChunks
	//
	// A paginated chunk of public rooms.
	// Required: true
	Chunk []*GetPublicRoomsOKBodyChunkItems `json:"chunk"`

	// A pagination token for the response. The absence of this token
	// means there are no more results to fetch and the client should
	// stop paginating.
	NextBatch string `json:"next_batch,omitempty"`

	// A pagination token that allows fetching previous results. The
	// absence of this token means there are no results before this
	// batch, i.e. this is the first batch.
	PrevBatch string `json:"prev_batch,omitempty"`

	// An estimate on the total number of public rooms, if the
	// server has an estimate.
	TotalRoomCountEstimate int64 `json:"total_room_count_estimate,omitempty"`
}

// Validate validates this get public rooms o k body
func (m *GetPublicRoomsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChunk(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetPublicRoomsOKBody) validateChunk(formats strfmt.Registry) error {

	if err := validate.Required("chunk", "body", m.Chunk); err != nil {
		return err
	}

	for i := 0; i < len(m.Chunk); i++ {
		if swag.IsZero(m.Chunk[i]) { // not required
			continue
		}

		if m.Chunk[i] != nil {
			if err := m.Chunk[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("chunk" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetPublicRoomsOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetPublicRoomsOKBody) UnmarshalBinary(b []byte) error {
	var res GetPublicRoomsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
