// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Post3PIdsParamsBody post3 p ids params body
// swagger:model post3PIdsParamsBody
type Post3PIdsParamsBody struct {

	// Whether the homeserver should also bind this third party
	// identifier to the account's Matrix ID with the passed identity
	// server. Default: ``false``.
	Bind bool `json:"bind,omitempty"`

	// three pid creds
	// Required: true
	ThreePidCreds *Post3PIdsParamsBodyThreePidCreds `json:"three_pid_creds"`
}

// Validate validates this post3 p ids params body
func (m *Post3PIdsParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateThreePidCreds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Post3PIdsParamsBody) validateThreePidCreds(formats strfmt.Registry) error {

	if err := validate.Required("three_pid_creds", "body", m.ThreePidCreds); err != nil {
		return err
	}

	if m.ThreePidCreds != nil {
		if err := m.ThreePidCreds.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("three_pid_creds")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Post3PIdsParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Post3PIdsParamsBody) UnmarshalBinary(b []byte) error {
	var res Post3PIdsParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
