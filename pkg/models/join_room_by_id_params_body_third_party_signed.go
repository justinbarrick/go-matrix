// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JoinRoomByIDParamsBodyThirdPartySigned ThirdPartySigned
//
// A signature of an ``m.third_party_invite`` token to prove that this user owns a third party identity which has been invited to the room.
// swagger:model joinRoomByIdParamsBodyThirdPartySigned
type JoinRoomByIDParamsBodyThirdPartySigned struct {

	// The Matrix ID of the invitee.
	// Required: true
	Mxid *string `json:"mxid"`

	// The Matrix ID of the user who issued the invite.
	// Required: true
	Sender *string `json:"sender"`

	// Signatures
	//
	// A signatures object containing a signature of the entire signed object.
	// Required: true
	Signatures interface{} `json:"signatures"`

	// The state key of the m.third_party_invite event.
	// Required: true
	Token *string `json:"token"`
}

// Validate validates this join room by Id params body third party signed
func (m *JoinRoomByIDParamsBodyThirdPartySigned) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMxid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSender(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSignatures(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateToken(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JoinRoomByIDParamsBodyThirdPartySigned) validateMxid(formats strfmt.Registry) error {

	if err := validate.Required("mxid", "body", m.Mxid); err != nil {
		return err
	}

	return nil
}

func (m *JoinRoomByIDParamsBodyThirdPartySigned) validateSender(formats strfmt.Registry) error {

	if err := validate.Required("sender", "body", m.Sender); err != nil {
		return err
	}

	return nil
}

func (m *JoinRoomByIDParamsBodyThirdPartySigned) validateSignatures(formats strfmt.Registry) error {

	if err := validate.Required("signatures", "body", m.Signatures); err != nil {
		return err
	}

	return nil
}

func (m *JoinRoomByIDParamsBodyThirdPartySigned) validateToken(formats strfmt.Registry) error {

	if err := validate.Required("token", "body", m.Token); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JoinRoomByIDParamsBodyThirdPartySigned) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JoinRoomByIDParamsBodyThirdPartySigned) UnmarshalBinary(b []byte) error {
	var res JoinRoomByIDParamsBodyThirdPartySigned
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
