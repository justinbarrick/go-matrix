// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReportContentParamsBody report content params body
// swagger:model reportContentParamsBody
type ReportContentParamsBody struct {

	// The reason the content is being reported. May be blank.
	// Required: true
	Reason *string `json:"reason"`

	// The score to rate this content as where -100 is most offensive
	// and 0 is inoffensive.
	// Required: true
	Score *int64 `json:"score"`
}

// Validate validates this report content params body
func (m *ReportContentParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReason(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScore(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReportContentParamsBody) validateReason(formats strfmt.Registry) error {

	if err := validate.Required("reason", "body", m.Reason); err != nil {
		return err
	}

	return nil
}

func (m *ReportContentParamsBody) validateScore(formats strfmt.Registry) error {

	if err := validate.Required("score", "body", m.Score); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReportContentParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReportContentParamsBody) UnmarshalBinary(b []byte) error {
	var res ReportContentParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
