// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned signed
//
// A block of content which has been signed, which servers can use to verify the event. Clients should ignore this.
// swagger:model getMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned
type GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned struct {

	// The invited matrix user ID. Must be equal to the user_id property of the event.
	// Required: true
	Mxid *string `json:"mxid"`

	// Signatures
	//
	// A single signature from the verifying server, in the format specified by the Signing Events section of the server-server API.
	// Required: true
	Signatures interface{} `json:"signatures"`

	// The token property of the containing third_party_invite object.
	// Required: true
	Token *string `json:"token"`
}

// Validate validates this get members by room o k body chunk items all of0 content third party invite signed
func (m *GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMxid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSignatures(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateToken(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned) validateMxid(formats strfmt.Registry) error {

	if err := validate.Required("mxid", "body", m.Mxid); err != nil {
		return err
	}

	return nil
}

func (m *GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned) validateSignatures(formats strfmt.Registry) error {

	if err := validate.Required("signatures", "body", m.Signatures); err != nil {
		return err
	}

	return nil
}

func (m *GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned) validateToken(formats strfmt.Registry) error {

	if err := validate.Required("token", "body", m.Token); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned) UnmarshalBinary(b []byte) error {
	var res GetMembersByRoomOKBodyChunkItemsAllOf0ContentThirdPartyInviteSigned
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
