// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SearchOKBodySearchCategoriesRoomEventsResultsItemsContext Event Context
//
// Context for result, if requested.
// swagger:model searchOKBodySearchCategoriesRoomEventsResultsItemsContext
type SearchOKBodySearchCategoriesRoomEventsResultsItemsContext struct {

	// End Token
	//
	// Pagination token for the end of the chunk
	End string `json:"end,omitempty"`

	// Events After
	//
	// Events just after the result.
	EventsAfter []*SearchOKBodySearchCategoriesRoomEventsResultsItemsContextEventsAfterItems `json:"events_after"`

	// Events Before
	//
	// Events just before the result.
	EventsBefore []*SearchOKBodySearchCategoriesRoomEventsResultsItemsContextEventsBeforeItems `json:"events_before"`

	// profile info
	ProfileInfo SearchOKBodySearchCategoriesRoomEventsResultsItemsContextProfileInfo `json:"profile_info,omitempty"`

	// Start Token
	//
	// Pagination token for the start of the chunk
	Start string `json:"start,omitempty"`
}

// Validate validates this search o k body search categories room events results items context
func (m *SearchOKBodySearchCategoriesRoomEventsResultsItemsContext) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEventsAfter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEventsBefore(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProfileInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchOKBodySearchCategoriesRoomEventsResultsItemsContext) validateEventsAfter(formats strfmt.Registry) error {

	if swag.IsZero(m.EventsAfter) { // not required
		return nil
	}

	for i := 0; i < len(m.EventsAfter); i++ {
		if swag.IsZero(m.EventsAfter[i]) { // not required
			continue
		}

		if m.EventsAfter[i] != nil {
			if err := m.EventsAfter[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("events_after" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SearchOKBodySearchCategoriesRoomEventsResultsItemsContext) validateEventsBefore(formats strfmt.Registry) error {

	if swag.IsZero(m.EventsBefore) { // not required
		return nil
	}

	for i := 0; i < len(m.EventsBefore); i++ {
		if swag.IsZero(m.EventsBefore[i]) { // not required
			continue
		}

		if m.EventsBefore[i] != nil {
			if err := m.EventsBefore[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("events_before" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SearchOKBodySearchCategoriesRoomEventsResultsItemsContext) validateProfileInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.ProfileInfo) { // not required
		return nil
	}

	if err := m.ProfileInfo.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("profile_info")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SearchOKBodySearchCategoriesRoomEventsResultsItemsContext) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchOKBodySearchCategoriesRoomEventsResultsItemsContext) UnmarshalBinary(b []byte) error {
	var res SearchOKBodySearchCategoriesRoomEventsResultsItemsContext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
