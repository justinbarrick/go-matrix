// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Post3PIdsParamsBodyThreePidCreds ThreePidCredentials
//
// The third party credentials to associate with the account.
// swagger:model post3PIdsParamsBodyThreePidCreds
type Post3PIdsParamsBodyThreePidCreds struct {

	// The client secret used in the session with the Identity Server.
	// Required: true
	ClientSecret *string `json:"client_secret"`

	// The Identity Server to use.
	// Required: true
	IDServer *string `json:"id_server"`

	// The session identifier given by the Identity Server.
	// Required: true
	Sid *string `json:"sid"`
}

// Validate validates this post3 p ids params body three pid creds
func (m *Post3PIdsParamsBodyThreePidCreds) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIDServer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Post3PIdsParamsBodyThreePidCreds) validateClientSecret(formats strfmt.Registry) error {

	if err := validate.Required("client_secret", "body", m.ClientSecret); err != nil {
		return err
	}

	return nil
}

func (m *Post3PIdsParamsBodyThreePidCreds) validateIDServer(formats strfmt.Registry) error {

	if err := validate.Required("id_server", "body", m.IDServer); err != nil {
		return err
	}

	return nil
}

func (m *Post3PIdsParamsBodyThreePidCreds) validateSid(formats strfmt.Registry) error {

	if err := validate.Required("sid", "body", m.Sid); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Post3PIdsParamsBodyThreePidCreds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Post3PIdsParamsBodyThreePidCreds) UnmarshalBinary(b []byte) error {
	var res Post3PIdsParamsBodyThreePidCreds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
