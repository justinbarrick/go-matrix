// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GetPushRulesOKBodyGlobalAllOf0 get push rules o k body global all of0
// swagger:model getPushRulesOKBodyGlobalAllOf0
type GetPushRulesOKBodyGlobalAllOf0 struct {

	// content
	Content []*GetPushRulesOKBodyGlobalAllOf0ContentItems `json:"content"`

	// override
	Override []*GetPushRulesOKBodyGlobalAllOf0OverrideItems `json:"override"`

	// room
	Room []*GetPushRulesOKBodyGlobalAllOf0RoomItems `json:"room"`

	// sender
	Sender []*GetPushRulesOKBodyGlobalAllOf0SenderItems `json:"sender"`

	// underride
	Underride []*GetPushRulesOKBodyGlobalAllOf0UnderrideItems `json:"underride"`
}

// Validate validates this get push rules o k body global all of0
func (m *GetPushRulesOKBodyGlobalAllOf0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOverride(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoom(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSender(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUnderride(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetPushRulesOKBodyGlobalAllOf0) validateContent(formats strfmt.Registry) error {

	if swag.IsZero(m.Content) { // not required
		return nil
	}

	for i := 0; i < len(m.Content); i++ {
		if swag.IsZero(m.Content[i]) { // not required
			continue
		}

		if m.Content[i] != nil {
			if err := m.Content[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("content" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GetPushRulesOKBodyGlobalAllOf0) validateOverride(formats strfmt.Registry) error {

	if swag.IsZero(m.Override) { // not required
		return nil
	}

	for i := 0; i < len(m.Override); i++ {
		if swag.IsZero(m.Override[i]) { // not required
			continue
		}

		if m.Override[i] != nil {
			if err := m.Override[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("override" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GetPushRulesOKBodyGlobalAllOf0) validateRoom(formats strfmt.Registry) error {

	if swag.IsZero(m.Room) { // not required
		return nil
	}

	for i := 0; i < len(m.Room); i++ {
		if swag.IsZero(m.Room[i]) { // not required
			continue
		}

		if m.Room[i] != nil {
			if err := m.Room[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("room" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GetPushRulesOKBodyGlobalAllOf0) validateSender(formats strfmt.Registry) error {

	if swag.IsZero(m.Sender) { // not required
		return nil
	}

	for i := 0; i < len(m.Sender); i++ {
		if swag.IsZero(m.Sender[i]) { // not required
			continue
		}

		if m.Sender[i] != nil {
			if err := m.Sender[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sender" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GetPushRulesOKBodyGlobalAllOf0) validateUnderride(formats strfmt.Registry) error {

	if swag.IsZero(m.Underride) { // not required
		return nil
	}

	for i := 0; i < len(m.Underride); i++ {
		if swag.IsZero(m.Underride[i]) { // not required
			continue
		}

		if m.Underride[i] != nil {
			if err := m.Underride[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("underride" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetPushRulesOKBodyGlobalAllOf0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetPushRulesOKBodyGlobalAllOf0) UnmarshalBinary(b []byte) error {
	var res GetPushRulesOKBodyGlobalAllOf0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
