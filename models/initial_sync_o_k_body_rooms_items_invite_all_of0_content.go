// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InitialSyncOKBodyRoomsItemsInviteAllOf0Content EventContent
// swagger:model initialSyncOKBodyRoomsItemsInviteAllOf0Content
type InitialSyncOKBodyRoomsItemsInviteAllOf0Content struct {

	// The avatar URL for this user, if any. This is added by the homeserver.
	AvatarURL string `json:"avatar_url,omitempty"`

	// The display name for this user, if any. This is added by the homeserver.
	Displayname string `json:"displayname,omitempty"`

	// Flag indicating if the room containing this event was created with the intention of being a direct chat. See `Direct Messaging`_.
	IsDirect bool `json:"is_direct,omitempty"`

	// The membership state of the user.
	// Required: true
	// Enum: [invite join knock leave ban]
	Membership *string `json:"membership"`

	// third party invite
	ThirdPartyInvite *InitialSyncOKBodyRoomsItemsInviteAllOf0ContentThirdPartyInvite `json:"third_party_invite,omitempty"`
}

// Validate validates this initial sync o k body rooms items invite all of0 content
func (m *InitialSyncOKBodyRoomsItemsInviteAllOf0Content) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMembership(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThirdPartyInvite(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var initialSyncOKBodyRoomsItemsInviteAllOf0ContentTypeMembershipPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["invite","join","knock","leave","ban"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		initialSyncOKBodyRoomsItemsInviteAllOf0ContentTypeMembershipPropEnum = append(initialSyncOKBodyRoomsItemsInviteAllOf0ContentTypeMembershipPropEnum, v)
	}
}

const (

	// InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipInvite captures enum value "invite"
	InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipInvite string = "invite"

	// InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipJoin captures enum value "join"
	InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipJoin string = "join"

	// InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipKnock captures enum value "knock"
	InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipKnock string = "knock"

	// InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipLeave captures enum value "leave"
	InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipLeave string = "leave"

	// InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipBan captures enum value "ban"
	InitialSyncOKBodyRoomsItemsInviteAllOf0ContentMembershipBan string = "ban"
)

// prop value enum
func (m *InitialSyncOKBodyRoomsItemsInviteAllOf0Content) validateMembershipEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, initialSyncOKBodyRoomsItemsInviteAllOf0ContentTypeMembershipPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InitialSyncOKBodyRoomsItemsInviteAllOf0Content) validateMembership(formats strfmt.Registry) error {

	if err := validate.Required("membership", "body", m.Membership); err != nil {
		return err
	}

	// value enum
	if err := m.validateMembershipEnum("membership", "body", *m.Membership); err != nil {
		return err
	}

	return nil
}

func (m *InitialSyncOKBodyRoomsItemsInviteAllOf0Content) validateThirdPartyInvite(formats strfmt.Registry) error {

	if swag.IsZero(m.ThirdPartyInvite) { // not required
		return nil
	}

	if m.ThirdPartyInvite != nil {
		if err := m.ThirdPartyInvite.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("third_party_invite")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InitialSyncOKBodyRoomsItemsInviteAllOf0Content) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InitialSyncOKBodyRoomsItemsInviteAllOf0Content) UnmarshalBinary(b []byte) error {
	var res InitialSyncOKBodyRoomsItemsInviteAllOf0Content
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
