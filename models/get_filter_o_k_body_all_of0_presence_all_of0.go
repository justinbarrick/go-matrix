// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// GetFilterOKBodyAllOf0PresenceAllOf0 Filter
// swagger:model getFilterOKBodyAllOf0PresenceAllOf0
type GetFilterOKBodyAllOf0PresenceAllOf0 struct {

	// The maximum number of events to return.
	Limit int64 `json:"limit,omitempty"`

	// A list of sender IDs to exclude. If this list is absent then no senders are excluded. A matching sender will be excluded even if it is listed in the ``'senders'`` filter.
	NotSenders []string `json:"not_senders"`

	// A list of event types to exclude. If this list is absent then no event types are excluded. A matching type will be excluded even if it is listed in the ``'types'`` filter. A '*' can be used as a wildcard to match any sequence of characters.
	NotTypes []string `json:"not_types"`

	// A list of senders IDs to include. If this list is absent then all senders are included.
	Senders []string `json:"senders"`

	// A list of event types to include. If this list is absent then all event types are included. A ``'*'`` can be used as a wildcard to match any sequence of characters.
	Types []string `json:"types"`
}

// Validate validates this get filter o k body all of0 presence all of0
func (m *GetFilterOKBodyAllOf0PresenceAllOf0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetFilterOKBodyAllOf0PresenceAllOf0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetFilterOKBodyAllOf0PresenceAllOf0) UnmarshalBinary(b []byte) error {
	var res GetFilterOKBodyAllOf0PresenceAllOf0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
