// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// QueryKeysParamsBody query keys params body
// swagger:model queryKeysParamsBody
type QueryKeysParamsBody struct {

	// The keys to be downloaded. A map from user ID, to a list of
	// device IDs, or to an empty list to indicate all devices for the
	// corresponding user.
	// Required: true
	DeviceKeys map[string][]string `json:"device_keys"`

	// The time (in milliseconds) to wait when downloading keys from
	// remote servers. 10 seconds is the recommended default.
	Timeout int64 `json:"timeout,omitempty"`
}

// Validate validates this query keys params body
func (m *QueryKeysParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceKeys(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QueryKeysParamsBody) validateDeviceKeys(formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *QueryKeysParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QueryKeysParamsBody) UnmarshalBinary(b []byte) error {
	var res QueryKeysParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
